<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="test__medicine_8py" kind="file" language="Python">
    <compoundname>test_medicine.py</compoundname>
    <innerclass refid="classapi_1_1tests_1_1test__medicine_1_1TestMedViews" prot="public">api::tests::test_medicine::TestMedViews</innerclass>
    <innernamespace refid="namespaceapi">api</innernamespace>
    <innernamespace refid="namespaceapi_1_1tests">api::tests</innernamespace>
    <innernamespace refid="namespaceapi_1_1tests_1_1test__medicine">api::tests::test_medicine</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespaceapi_1_1tests_1_1test__medicine" refkind="compound"><highlight class="keyword">from</highlight><highlight class="normal"><sp/>django.contrib.auth.models<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>User</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>django.test<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>TestCase</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespaceapi_1_1decorators" kindref="compound">api.decorators</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>check_response</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>django.utils.decorators<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>method_decorator</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespaceapi_1_1tests_1_1test__auth" kindref="compound">api.tests.test_auth</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>USER_CREDENTIALS,<sp/>STORE_DATA</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacemedicines_1_1models" kindref="compound">medicines.models</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Medicine</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespaceapi_1_1views_1_1medicine" kindref="compound">api.views.medicine</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>MedicineView</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>django.http<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>QueryDict</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10" refid="namespaceapi_1_1tests_1_1test__medicine_1a3d256221a093e771fcea2569ca0fda22" refkind="member"><highlight class="normal">NEW_Medicine<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;name&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;Dummy<sp/>for<sp/>testing&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;price&apos;</highlight><highlight class="normal">:<sp/>100.5,</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;category&apos;</highlight><highlight class="normal">:<sp/>1,</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;description&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;This<sp/>is<sp/>intended<sp/>for<sp/>testing<sp/>only&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;quantity&apos;</highlight><highlight class="normal">:<sp/>200</highlight></codeline>
<codeline lineno="16"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="classapi_1_1tests_1_1test__medicine_1_1TestMedViews" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classapi_1_1tests_1_1test__medicine_1_1TestMedViews" kindref="compound">TestMedViews</ref>(TestCase):</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Initial<sp/>data<sp/>for<sp/>testing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="classapi_1_1tests_1_1test__medicine_1_1TestMedViews_1a87775038be0d0dc3c5ef9d36779bbef1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>fixtures<sp/>=<sp/>[</highlight><highlight class="stringliteral">&apos;api/tests/med_initial.json&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="classapi_1_1tests_1_1test__medicine_1_1TestMedViews_1ae2fbd30885d06c246f278740bd7a4f21" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classapi_1_1tests_1_1test__medicine_1_1TestMedViews_1ae2fbd30885d06c246f278740bd7a4f21" kindref="member">setUp</ref>(self)<sp/>-&gt;<sp/>None:</highlight></codeline>
<codeline lineno="24" refid="classapi_1_1tests_1_1test__medicine_1_1TestMedViews_1a99846d5a24048e86eb268dc4e805fff1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classapi_1_1tests_1_1test__medicine_1_1TestMedViews_1a99846d5a24048e86eb268dc4e805fff1" kindref="member">user</ref><sp/>=<sp/>User.objects.create_user(**USER_CREDENTIALS)</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="classapi_1_1tests_1_1test__medicine_1_1TestMedViews_1ac461f5e27ab64fde40c3013fd93aade3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classapi_1_1tests_1_1test__medicine_1_1TestMedViews_1ac461f5e27ab64fde40c3013fd93aade3" kindref="member">handle_permit</ref>(self,<sp/>login=True):</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="28"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Handles<sp/>the<sp/>permissions<sp/>in<sp/>case<sp/>of<sp/>this<sp/>tests</highlight></codeline>
<codeline lineno="29"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:param<sp/>login:<sp/>Specifies<sp/>if,<sp/>the<sp/>user<sp/>should<sp/>be<sp/>logged<sp/>in</highlight></codeline>
<codeline lineno="30"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:type<sp/>login:<sp/>bool</highlight></codeline>
<codeline lineno="31"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>login:</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.client.login(**USER_CREDENTIALS)</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.client.logout()</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@method_decorator(check_response(path=&quot;/api/v1/&quot;,<sp/>login_required=False)</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="38" refid="classapi_1_1tests_1_1test__medicine_1_1TestMedViews_1aa78d9b6748aab1d701a542ccc7ce2338" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classapi_1_1tests_1_1test__medicine_1_1TestMedViews_1aa78d9b6748aab1d701a542ccc7ce2338" kindref="member">test_get_list</ref>(self):</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>self.client.get(</highlight><highlight class="stringliteral">&apos;/api/v1/&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertEqual(Medicine.objects.count(),<sp/>len(res.json()))</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>query<sp/>=<sp/>QueryDict(</highlight><highlight class="stringliteral">&apos;price__lt=5&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>MedicineView.get_queryset(query)</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertTrue(all(m.price<sp/>&lt;=<sp/>5<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>m<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>res))</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>query<sp/>=<sp/>QueryDict(</highlight><highlight class="stringliteral">&apos;category=Fever&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>MedicineView.get_queryset(query)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertTrue(all(m.category.name<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;Fever&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>m<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>res))</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="classapi_1_1tests_1_1test__medicine_1_1TestMedViews_1ada25afa10b87759814070b191ce9fdec" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classapi_1_1tests_1_1test__medicine_1_1TestMedViews_1ada25afa10b87759814070b191ce9fdec" kindref="member">test_new_add</ref>(self):</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="52"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Test<sp/>if<sp/>the<sp/>POST<sp/>requests<sp/>to<sp/>create<sp/>new<sp/>medicines<sp/>are<sp/>working</highlight></codeline>
<codeline lineno="53"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Login</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classapi_1_1tests_1_1test__medicine_1_1TestMedViews_1ac461f5e27ab64fde40c3013fd93aade3" kindref="member">handle_permit</ref>()</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>self.client.post(</highlight><highlight class="stringliteral">&apos;/api/v1/&apos;</highlight><highlight class="normal">,<sp/>NEW_Medicine)</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertEqual(res.status_code,<sp/>400,<sp/></highlight><highlight class="stringliteral">&apos;Non<sp/>permitted<sp/>users<sp/>are<sp/>allowed<sp/>to<sp/>use&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Become<sp/>seller<sp/>|<sp/>Get<sp/>permissions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.client.post(</highlight><highlight class="stringliteral">&apos;/api/v1/sell/&apos;</highlight><highlight class="normal">,<sp/>STORE_DATA)</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>self.client.post(</highlight><highlight class="stringliteral">&apos;/api/v1/&apos;</highlight><highlight class="normal">,<sp/>{**NEW_Medicine,<sp/></highlight><highlight class="stringliteral">&apos;category&apos;</highlight><highlight class="normal">:<sp/>1})</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertEqual(res.status_code,<sp/>201,<sp/></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res.json().get(</highlight><highlight class="stringliteral">&apos;errors&apos;</highlight><highlight class="normal">,<sp/>res.json().get(</highlight><highlight class="stringliteral">&apos;msg&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;No<sp/>message&apos;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertTrue(Medicine.objects.filter(name=NEW_Medicine[</highlight><highlight class="stringliteral">&apos;name&apos;</highlight><highlight class="normal">]),<sp/></highlight><highlight class="stringliteral">&apos;Medicine<sp/>not<sp/>created&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Check<sp/>duplicate<sp/>request</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>self.client.post(</highlight><highlight class="stringliteral">&apos;/api/v1/&apos;</highlight><highlight class="normal">,<sp/>{**NEW_Medicine,<sp/></highlight><highlight class="stringliteral">&apos;category&apos;</highlight><highlight class="normal">:<sp/>1})</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertEqual(res.status_code,<sp/>400,<sp/></highlight><highlight class="stringliteral">&apos;Duplicate<sp/>medicines<sp/>are<sp/>being<sp/>created&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@method_decorator(check_response(&quot;/api/v1/detail/1/&quot;,<sp/>login_required=False)</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="73" refid="classapi_1_1tests_1_1test__medicine_1_1TestMedViews_1ab81e65bf4d09a98a759c599c74212f1d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classapi_1_1tests_1_1test__medicine_1_1TestMedViews_1ab81e65bf4d09a98a759c599c74212f1d" kindref="member">test_detail_data</ref>(self):</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>self.client.get(</highlight><highlight class="stringliteral">&quot;/api/v1/detail/new-med/&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertEqual(res.json()[</highlight><highlight class="stringliteral">&apos;name&apos;</highlight><highlight class="normal">],<sp/></highlight><highlight class="stringliteral">&apos;New<sp/>Med&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="classapi_1_1tests_1_1test__medicine_1_1TestMedViews_1a31231b70cf7e37d5639e07517ddc7930" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classapi_1_1tests_1_1test__medicine_1_1TestMedViews_1a31231b70cf7e37d5639e07517ddc7930" kindref="member">test_update_med</ref>(self):</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>self.client.post(</highlight><highlight class="stringliteral">&apos;/api/v1/detail/1/&apos;</highlight><highlight class="normal">,<sp/>{**NEW_Medicine,<sp/></highlight><highlight class="stringliteral">&apos;name&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;Dummy<sp/>changed<sp/>name&apos;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertEqual(res.json()[</highlight><highlight class="stringliteral">&apos;name&apos;</highlight><highlight class="normal">],<sp/></highlight><highlight class="stringliteral">&apos;Dummy<sp/>changed<sp/>name&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertEqual(Medicine.objects.get(pk=1).name,<sp/></highlight><highlight class="stringliteral">&apos;Dummy<sp/>changed<sp/>name&apos;</highlight><highlight class="normal">)</highlight></codeline>
    </programlisting>
    <location file="/tmp/github_repos_arch_doc_gen/mukeshgurpude/medstore/api/tests/test_medicine.py"/>
  </compounddef>
</doxygen>
